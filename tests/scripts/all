#!/bin/bash
# $OpenLDAP$
## This work is part of OpenLDAP Software <http://www.openldap.org/>.
##
## Copyright 1998-2015 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

. $SRCDIR/scripts/defines.sh

TB="" TN=""
if test -t 1 ; then
	TB=`$SHTOOL echo -e "%B" 2>/dev/null`
	TN=`$SHTOOL echo -e "%b" 2>/dev/null`
fi

FAILCOUNT=0
SKIPCOUNT=0
SLEEPTIME=10
RESULTS=$TESTWD/results

BACKEND_MODE=$BACKEND
if [ -n "$REOPENLDAP_MODE" ]; then
	BACKEND_MODE="$BACKEND/$REOPENLDAP_MODE"
fi

teamcity_msg "testSuiteStarted name='all LDAP tests for $BACKEND_MODE'"
echo ">>>>> Executing all LDAP tests for $BACKEND_MODE"

if [ -n "$NOEXIT" ]; then
	echo "Result	Test" > $RESULTS
fi

for CMD in $SRCDIR/scripts/test*; do
	case "$CMD" in
		*~)		continue;;
		*.bak)	continue;;
		*.orig)	continue;;
		*.sav)	continue;;
		*)		test -f "$CMD" || continue;;
	esac

	# remove cruft from prior test
	if test $PRESERVE = yes ; then
		/bin/rm -rf $TESTDIR/db.*
	else
		find -H ${TESTDIR} -maxdepth 1 -mindepth 1 | xargs rm -rf || exit $?
	fi
	if test $BACKEND = ndb ; then
		mysql --user root <<EOF
		drop database if exists db_1;
		drop database if exists db_2;
		drop database if exists db_3;
		drop database if exists db_4;
		drop database if exists db_5;
		drop database if exists db_6;
EOF
	fi

	BCMD=`basename $CMD`
	TEST_ID="$BCMD-$BACKEND"
	if [ -n "$REOPENLDAP_MODE" ]; then
		TEST_ID="$BCMD-$BACKEND-$REOPENLDAP_MODE"
	fi

	if [ -x "$CMD" ]; then
		teamcity_msg "testStarted name='$BCMD for $BACKEND_MODE' captureStandardOutput='true'"
		echo ">>>>> Starting ${TB}$BCMD${TN} for $BACKEND_MODE..."
		$CMD 2>&1 | tee $TESTDIR/main.log
		RC=${PIPESTATUS[0]}

		if ! collect_coredumps $TEST_ID; then
			RC=134
		fi
		if test $RC -eq 0 ; then
			collect_test $TEST_ID no
			echo ">>>>> $BCMD completed ${TB}OK${TN} for $BACKEND_MODE."
		else
			collect_test $TEST_ID yes
			echo ">>>>> $BCMD ${TB}failed${TN} for $BACKEND_MODE"
			teamcity_msg "testFailed name='$BCMD for $BACKEND_MODE'"
			FAILCOUNT=`expr $FAILCOUNT + 1`

			if [ -n "$NOEXIT" ]; then
				echo "Continuing."
			else
				echo "(exit $RC)"
				exit $RC
			fi
		fi
		teamcity_msg "testFinished name='$BCMD for $BACKEND_MODE'"
	else
		echo ">>>>> Skipping ${TB}$BCMD${TN} for $BACKEND_MODE."
		SKIPCOUNT=`expr $SKIPCOUNT + 1`
		RC="-"
		teamcity_msg t"testIgnored name='$BCMD for $BACKEND_MODE'"
	fi

	if [ -n "$NOEXIT" ]; then
		echo "$RC	$TEST_ID" >> $RESULTS
	fi

#	echo ">>>>> waiting $SLEEPTIME seconds for things to exit"
#	sleep $SLEEPTIME
	echo ""
done

if [ -n "$NOEXIT" ]; then
	if [ "$FAILCOUNT" -gt 0 ]; then
		cat $RESULTS
		echo "$FAILCOUNT tests for $BACKEND_MODE ${TB}failed${TN}. Please review the test log."
	else
		echo "All executed tests for $BACKEND_MODE ${TB}succeeded${TN}."
	fi
fi

echo "$SKIPCOUNT tests for $BACKEND_MODE were ${TB}skipped${TN}."
teamcity_msg "testSuiteFinished name='all LDAP tests for $BACKEND_MODE'"
exit 0
